name: Push to Docker Hub

on:
  push:
    branches: [ "master" ]

jobs:
  push_to_registry-rest-quarkus:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
            host port: 3306 # Optional, default value is 3306. The port of host
            container port: 3306 # Optional, default value is 3306. The port of container
            character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
            collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
            mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
            mysql database: 'vinogradsTEST' # Optional, default value is "test". The specified database which will be create
            mysql root password: root # Required if "mysql user" is empty, default is empty. The root superuser password
            mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
            mysql password: developer # Required if "mysql user" exists. The password for the "mysql user"

      - name: Build and test with Maven
        working-directory: ./vinogradservice
        run: mvn package -Dnative --define quarkus.native.container-build=true

      - name: Prepare JAR for upload
        working-directory: ./vinogradservice
        run: mkdir build && cp target/*-runner build

      - name: Upload resulting JAR
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: ./vinogradservice
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --file ./src/main/docker/Dockerfile.native-micro -t ${{ secrets.DOCKER_USERNAME }}/uporabnikiservice:latest --push .
    
  push_to_registry-grpc-quarkus:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
      - name: Build and test with Maven
        working-directory: ./uporabnikiservice
        run: mvn package -Dnative --define quarkus.native.container-build=true

      - name: Prepare JAR for upload
        working-directory: ./uporabnikiservice
        run: mkdir build && cp target/*-runner build

      - name: Upload resulting JAR
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: ./uporabnikiservice
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --file ./src/main/docker/Dockerfile.native-micro -t ${{ secrets.DOCKER_USERNAME }}/uporabnikiservice:latest --push .
    
  push_to_registry-spring:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and test with Maven
        working-directory: ./winestorageservice
        run: mvn -B clean package --file pom.xml

      - name: Prepare JAR for upload
        working-directory: ./winestorageservice
        run: mkdir build && cp target/*.jar build

      - name: Upload resulting JAR
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        working-directory: ./winestorageservice
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/winestorageservice:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/winestorageservice:latest

  push_to_registry-mobile-gateway:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        working-directory: ./mobile-gateway
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mobilegateway:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/mobilegateway:latest

  push_to_registry-web-gateway:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        working-directory: ./web-gateway
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webgateway:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/webgateway:latest

  push_to_registry-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        working-directory: ./webapp
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapp:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapp:latest